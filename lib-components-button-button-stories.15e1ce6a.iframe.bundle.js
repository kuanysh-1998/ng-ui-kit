(self.webpackChunkng_ui_kit=self.webpackChunkng_ui_kit||[]).push([[451],{"./node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./projects/ng-ui-kit-lib/src/lib/components/button/button.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllButtons:()=>AllButtons,Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module.mjs"),_button_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ng-ui-kit-lib/src/lib/components/button/button.component.ts"),_svg_svg_config__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/ng-ui-kit-lib/src/lib/components/svg/svg.config.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Buttons/Button",component:_button_component__WEBPACK_IMPORTED_MODULE_1__.Q,tags:["autodocs"],decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.Iz)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.MD]})],args:{label:"Печать",stylingMode:"contained",variant:"default",disabled:!1,fullWidth:!1},argTypes:{label:{control:"text",description:"**@Input** label - Текст кнопки.",table:{type:{summary:"string | number"},defaultValue:{summary:"Печать"}}},size:{control:"radio",options:["xlarge","large","small","default"],description:"**@Input** size - Размер кнопки.",table:{type:{summary:'"xlarge" | "large" | "small" | "default"'},defaultValue:{summary:"default"}}},token:{control:"text",description:"**@Input** token - Токен для идентификации.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},variant:{control:"select",options:["default","secondary","alternative","success","info","warning","danger","help"],description:"**@Input** variant - Вариант оформления кнопки.",table:{type:{summary:"'default' | 'secondary'  | 'alternative' | 'success' | 'info' | 'warning' | 'danger' | 'help'"},defaultValue:{summary:"default"}}},stylingMode:{control:"radio",options:["contained","outlined","ghost"],description:"**@Input** stylingMode - Стиль кнопки.",table:{type:{summary:"'contained' | 'outlined' | 'ghost'"},defaultValue:{summary:"contained"}}},fullWidth:{control:"boolean",description:"**@Input** fullWidth - Определяет, должна ли кнопка быть на всю ширину.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isIcon:{control:"boolean",description:"**@Input** isIcon - Флаг, определяющий, является ли кнопка иконкой (Например если вместо иконки цифра или спецсимвол).",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},icon:{control:"select",options:[null,...Object.values(_svg_svg_config__WEBPACK_IMPORTED_MODULE_2__.F)],description:"**@Input** icon - Иконка слева от текста.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},rightIcon:{control:"select",options:[null,...Object.values(_svg_svg_config__WEBPACK_IMPORTED_MODULE_2__.F)],description:"**@Input** iconRight - Иконка справа от текста.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},disabled:{control:"boolean",description:"**@Input** disabled - Флаг неактивности кнопки.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},clicked:{description:"**@Output** clicked - Событие, вызываемое при клике на кнопку.",action:"clicked"}}},Primary={args:{}},AllButtons=args=>({template:'\n      <div style="display:flex; flex-direction: column; gap: 50px">\n        <div>\n          <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n           <ng-button size="large" [variant]="item" [label]="item"></ng-button>\n              <ng-button [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n\n\n          </div>\n        </div>\n\n\n        <div>\n          <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n              <ng-button [icon]="icon" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n          </div>\n        </div>\n\n\n        <div>\n           <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n                <ng-button [icon]="icon" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="outlined" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="outlined" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="tinted" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="tinted" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="ghost" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="ghost" [variant]="item"></ng-button>\n            </div>\n        </div>\n      </div>\n  ',props:{...args,icon:_svg_svg_config__WEBPACK_IMPORTED_MODULE_2__.F.Spinner,currentItems:["default","secondary","alternative","success","info","warning","danger","help"]}}),__namedExportsOrder=["Primary","AllButtons"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Primary.parameters?.docs?.source}}},AllButtons.parameters={...AllButtons.parameters,docs:{...AllButtons.parameters?.docs,source:{originalSource:'(args: object): unknown => {\n  const items = ["default", "secondary", "alternative", "success", "info", "warning", "danger", "help"];\n  return {\n    template: `\n      <div style="display:flex; flex-direction: column; gap: 50px">\n        <div>\n          <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n           <ng-button size="large" [variant]="item" [label]="item"></ng-button>\n              <ng-button [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="large" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n\n\n          </div>\n        </div>\n\n\n        <div>\n          <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n              <ng-button [icon]="icon" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="outlined" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="tinted" [variant]="item" [label]="item"></ng-button>\n              <ng-button [icon]="icon" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n              <ng-button size="small" [icon]="icon" stylingMode="ghost" [variant]="item" [label]="item"></ng-button>\n          </div>\n        </div>\n\n\n        <div>\n           <div *ngFor="let item of currentItems" style="display: flex; gap: 8px; margin-bottom: 12px;">\n                <ng-button [icon]="icon" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="outlined" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="outlined" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="tinted" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="tinted" [variant]="item"></ng-button>\n                <ng-button [icon]="icon" stylingMode="ghost" [variant]="item"></ng-button>\n                <ng-button size="small" [icon]="icon" stylingMode="ghost" [variant]="item"></ng-button>\n            </div>\n        </div>\n      </div>\n  `,\n    props: {\n      ...args,\n      icon: Icons.Spinner,\n      currentItems: items\n    }\n  };\n}',...AllButtons.parameters?.docs?.source}}}},"./projects/ng-ui-kit-lib/src/lib/components/svg/svg.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: inline-flex;\n  flex-shrink: 0;\n}\n\n:host svg,\n:host svg-icon,\n:host img {\n  width: 100%;\n  height: 100%;\n  display: block;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ng-ui-kit-lib/src/lib/components/svg/svg.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{k:()=>SvgComponent});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var svg_componentngResource=__webpack_require__("./projects/ng-ui-kit-lib/src/lib/components/svg/svg.component.scss?ngResource"),svg_componentngResource_default=__webpack_require__.n(svg_componentngResource),common_module=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module.mjs"),debug_node=__webpack_require__("./node_modules/@angular/core/fesm2022/debug_node.mjs"),angular_svg_icon=__webpack_require__("./node_modules/angular-svg-icon/fesm2022/angular-svg-icon.mjs"),svg_config=__webpack_require__("./projects/ng-ui-kit-lib/src/lib/components/svg/svg.config.ts");let SvgComponent=class SvgComponent{icon;basePath="assets/svg";size="default";color;token;width;height;wrapperWidth;wrapperHeight;ariaLabel;role="img";get ariaHidden(){return this.ariaLabel?null:"true"}get ariaLabelAttr(){return this.ariaLabel??null}defaultIcons={};get _resolvedWidth(){return this.width??svg_config.s[this.size].width}get _resolvedHeight(){return this.height??svg_config.s[this.size].height}get hostWidth(){return this.wrapperWidth??this._resolvedWidth}get hostHeight(){return this.wrapperHeight??this._resolvedHeight}get hostColor(){return this.color??null}get defaultIcon(){return this.icon?this.defaultIcons[this.icon]??null:null}get iconWidth(){return this._resolvedWidth}get iconHeight(){return this._resolvedHeight}get iconName(){return this.icon?String(this.icon):null}get isSvg(){const src=this.iconSrc;return!!src&&/\.svg($|\?)/i.test(src)}get iconSrc(){const name=this.iconName;if(!name)return null;const file=/\.[a-z0-9]+$/i.test(name)?name:`${name}.svg`;return`${this.basePath}/${file}`}static propDecorators={icon:[{type:debug_node.pde}],basePath:[{type:debug_node.pde}],size:[{type:debug_node.pde}],color:[{type:debug_node.pde}],token:[{type:debug_node.pde}],width:[{type:debug_node.pde}],height:[{type:debug_node.pde}],wrapperWidth:[{type:debug_node.pde}],wrapperHeight:[{type:debug_node.pde}],ariaLabel:[{type:debug_node.pde}],role:[{type:debug_node.g$6,args:["attr.role"]}],ariaHidden:[{type:debug_node.g$6,args:["attr.aria-hidden"]}],ariaLabelAttr:[{type:debug_node.g$6,args:["attr.aria-label"]}],hostWidth:[{type:debug_node.g$6,args:["style.width"]}],hostHeight:[{type:debug_node.g$6,args:["style.height"]}],hostColor:[{type:debug_node.g$6,args:["style.color"]}]}};SvgComponent=(0,tslib_es6.Cg)([(0,debug_node.uAl)({selector:"ng-svg",standalone:!0,imports:[common_module.MD,angular_svg_icon.iu],template:'@if (defaultIcon; as tmpl) {\n<ng-container *ngTemplateOutlet="tmpl"></ng-container>\n} @else if (iconSrc) { @if (isSvg) {\n<svg-icon\n  [ngStyle]="{ width: iconWidth, height: iconHeight, display: \'flex\' }"\n  [svgStyle]="{ width: iconWidth, height: iconHeight, fill: color }"\n  [src]="iconSrc"\n  [attr.data-token]="token"\n>\n</svg-icon>\n} @else {\n<img\n  [src]="iconSrc"\n  [style.width]="iconWidth"\n  [style.height]="iconHeight"\n  [attr.alt]="ariaLabel ?? \'\'"\n/>\n} } @else { }\n',encapsulation:debug_node.gXe.None,changeDetection:debug_node.Ngq.OnPush,styles:[svg_componentngResource_default()]})],SvgComponent)},"./projects/ng-ui-kit-lib/src/lib/components/svg/svg.config.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>Icons,s:()=>ICON_DEFAULT_SIZE});const ICON_DEFAULT_SIZE={default:{width:"1.25rem",height:"1.25rem"},small:{width:"1rem",height:"1rem"},large:{width:"1.5rem",height:"1.5rem"}};var Icons;!function(Icons){Icons.Spinner="i_spinner"}(Icons||(Icons={}))}}]);